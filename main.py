import base64
exec(base64.b64decode('ZnJvbSBjb2xvcmFtYSBpbXBvcnQgRm9yZSwgU3R5bGUsIGluaXQKaW1wb3J0IG9zCmltcG9ydCB0aW1lCmltcG9ydCByZXF1ZXN0cwoKaW5pdCgpCgpkZWYgY2xlYXJfY29uc29sZSgpOgogICAgb3Muc3lzdGVtKCdjbHMnIGlmIG9zLm5hbWUgPT0gJ250JyBlbHNlICdjbGVhcicpCgpiYW5uZXIxID0gZiIiIntGb3JlLlJFRH0gICAgXyAgIF9fX19fX19fX19fX19fIF9fIF8gICBfX19fXyAgICBfXyAgX19fX19fX19fCiAgIC8gfCAvIC8gIF8vIF9fX18vIC8vXy8vIHwgLyAvICAgfCAgLyAgfC8gIC8gX19fXy8KICAvICB8LyAvLyAvLyAvICAgLyAsPCAgLyAgfC8gLyAvfCB8IC8gL3xfLyAvIF9fLyAgIAogLyAvfCAgLy8gLy8gL19fXy8gL3wgfC8gL3wgIC8gX19fIHwvIC8gIC8gLyAvX19fICAgCi9fLyB8Xy9fX18vXF9fX18vXy8gfF8vXy8gfF8vXy8gIHxfL18vICAvXy9fX19fXy8iIiIKCmJhbm5lcjIgPSBmIiIie0ZvcmUuUkVEfQogICBfX19fXyBfX19fX19fX18gICAgX19fXyAgX19fX19fX18gIF9fCiAgLyBfX18vLyBfX19fLyAgIHwgIC8gX18gXC8gX19fXy8gLyAvIC8KICBcX18gXC8gX18vIC8gL3wgfCAvIC9fLyAvIC8gICAvIC9fLyAvIAogX19fLyAvIC9fX18vIF9fXyB8LyBfLCBfLyAvX19fLyBfXyAgLyAgCi9fX19fL19fX19fL18vICB8Xy9fLyB8X3xcX19fXy9fLyAvXy8gICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoiIiIKCmRlZiBtYWluKCk6CiAgICBuaWNrbmFtZSA9IGlucHV0KEZvcmUuR1JFRU4gKyAiTmlja25hbWU6ICIgKyBTdHlsZS5SRVNFVF9BTEwpCiAgICBjbGVhcl9jb25zb2xlKCkKCiAgICBzaXRlcyA9IFsKICAgICAgICAiaHR0cHM6Ly92ay5jb20vIiwKICAgICAgICAiaHR0cHM6Ly9naXRodWIuY29tLyIsCiAgICAgICAgImh0dHBzOi8vbS5vay5ydS8iLAogICAgICAgICJodHRwczovL3lhcHB5Lm1lZGlhL24vIiwKICAgICAgICAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS8iLAogICAgICAgICJodHRwczovL3R3aXR0ZXIuY29tLyIsCiAgICAgICAgImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS8iLAogICAgXQoKICAgIGZvciBzaXRlIGluIHNpdGVzOgogICAgICAgIHByaW50KEZvcmUuUkVEICsgIlsrXSAiICsgRm9yZS5HUkVFTiArIHNpdGUgKyBGb3JlLllFTExPVyArIGYie25pY2tuYW1lfSIpCiAgICAgICAgdGltZS5zbGVlcCgwLjEpCiAgICAKICAgIHByaW50KCIiKQogICAgaW5wdXQoRm9yZS5SRUQgKyAi0J3QsNC20LzQuNGC0LUgRU5URVIg0YfRgtC+0LHRiyDQv9GA0L7QtNC+0LvQttC40YLRjC4uLiIpCgpkZWYgc2Vjb25kX21ldGhvZCgpOgogICAgY2xlYXJfY29uc29sZSgpCiAgICBuaWNrbmFtZSA9IGlucHV0KEZvcmUuR1JFRU4gKyAiTmlja25hbWU6ICIgKyBTdHlsZS5SRVNFVF9BTEwpCiAgICBjbGVhcl9jb25zb2xlKCkKCiAgICBzaXRlcyA9IFsKICAgICAgICAiaHR0cHM6Ly92ay5jb20vIiwKICAgICAgICAiaHR0cHM6Ly9naXRodWIuY29tLyIsCiAgICAgICAgImh0dHBzOi8vbS5vay5ydS8iLAogICAgICAgICJodHRwczovL3lhcHB5Lm1lZGlhL24vIiwKICAgICAgICAiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS8iLAogICAgICAgICJodHRwczovL3R3aXR0ZXIuY29tLyIsCiAgICAgICAgImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS8iLAogICAgXQoKICAgIGZvciBzaXRlIGluIHNpdGVzOgogICAgICAgIHVybCA9IHNpdGUgKyBuaWNrbmFtZQogICAgICAgIHRyeToKICAgICAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsKQogICAgICAgICAgICBpZiByZXNwb25zZS5zdGF0dXNfY29kZSA9PSAyMDA6CiAgICAgICAgICAgICAgICBwcmludChGb3JlLlJFRCArICJbK10gIiArIEZvcmUuR1JFRU4gKyBmItCf0YDQvtGE0LjQu9GMINC90LDQudC00LXQvToge3VybH0iKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQoRm9yZS5SRUQgKyAiWy1dICIgKyBGb3JlLkdSRUVOICsgZiLQn9GA0L7RhNC40LvRjCDQvdC1INC90LDQudC00LXQvToge3VybH0iKQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5SZXF1ZXN0RXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHByaW50KEZvcmUuUkVEICsgIlstXSAiICsgRm9yZS5HUkVFTiArIGYi0J7RiNC40LHQutCwINC/0YDQuCDQt9Cw0L/RgNC+0YHQtToge3VybH0iKQogICAgICAgIHRpbWUuc2xlZXAoMC4xKQoKICAgIHByaW50KCIiKQogICAgaW5wdXQoRm9yZS5SRUQgKyAi0J3QsNC20LzQuNGC0LUgRU5URVIg0YfRgtC+0LHRiyDQv9GA0L7QtNC+0LvQttC40YLRjC4uLiIpCgpkZWYgZXhpdF9wcm9ncmFtKCk6CiAgICBjbGVhcl9jb25zb2xlKCkKICAgIGV4aXQoKQoKd2hpbGUgVHJ1ZToKICAgIGNsZWFyX2NvbnNvbGUoKQogICAgCiAgICBwcmludChiYW5uZXIxKQogICAgcHJpbnQoYmFubmVyMikKICAgIAogICAgcHJpbnQoRm9yZS5SRUQgKyAiMS4iICsgRm9yZS5HUkVFTiArICIg0J/QtdGA0LLRi9C5INGB0L/QvtGB0L7QsSDQv9C+0LjRgdC60LAiKQogICAgcHJpbnQoRm9yZS5SRUQgKyAiMi4iICsgRm9yZS5HUkVFTiArICIg0JLRgtC+0YDQvtC5INGB0L/QvtGB0L7QsSDQv9C+0LjRgdC60LAiKQogICAgcHJpbnQoRm9yZS5SRUQgKyAiMy4iICsgRm9yZS5HUkVFTiArICIg0JLRi9GF0L7QtCIpCgogICAgcHJpbnQoIiIpCiAgICBjaG9pY2UgPSBpbnB1dChGb3JlLlJFRCArICLQktGL0LHQtdGA0LjRgtC1INGB0L/QvtGB0L7QsSDQv9C+0LjRgdC60LA6ICIgKyBTdHlsZS5SRVNFVF9BTEwpCgogICAgaWYgY2hvaWNlID09ICIxIjoKICAgICAgICBtYWluKCkKICAgIGVsaWYgY2hvaWNlID09ICIyIjoKICAgICAgICBzZWNvbmRfbWV0aG9kKCkKICAgIGVsaWYgY2hvaWNlID09ICIzIjoKICAgICAgICBleGl0X3Byb2dyYW0oKQogICAgZWxzZToKICAgICAgICBwcmludChGb3JlLlJFRCArICLQndC10LrQvtGA0YDQtdC60YLQvdGL0Lkg0LLRi9Cx0L7RgC4g0J/QvtC/0YDQvtCx0YPQudGC0LUg0YHQvdC+0LLQsC4iKQogICAgICAgIHRpbWUuc2xlZXAoMSk='))
